/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;
import Datos.LLenadoListas;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import Entidades.*;
import java.io.File;
import com.itextpdf.text.Document;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import java.io.PrintWriter;
import javax.swing.JFileChooser;

/**
 *
 * @author kjlme
 */
public class frmInscripcion extends javax.swing.JFrame implements Comprobante{
   String path;
   DefaultTableModel tabla1;
   DefaultTableModel ModeloTablaDetalle;
   DefaultTableModel ModeloIngenieria;
   DefaultTableModel ModeloHumanidades;
   DefaultTableModel ModeloEmpresariales;
   DefaultTableModel ModeloSalud;
   LLenadoListas Datos;
   
    /**
     * Creates new form frmInscripcion
     */
    public frmInscripcion() {
        initComponents();
        tabla1 = (DefaultTableModel)this.tablaMaterias.getModel();
        this.ModeloTablaDetalle = (DefaultTableModel)this.tablaDetalles.getModel();
        this.ModeloIngenieria = (DefaultTableModel)this.TablaIngenieria.getModel();
        this.ModeloHumanidades = (DefaultTableModel)this.TablaHumanidades.getModel();
        this.ModeloEmpresariales = (DefaultTableModel)this.TablaEmpresariales.getModel();
        this.ModeloSalud = (DefaultTableModel)this.TablaSalud.getModel();
        this.Datos = new LLenadoListas();
        this.Datos.llenadoDeListasEstaticas();
        

        //Combo de facultades
         for (int i = 0; i < this.Datos.lFacultades.size(); i++) {
            comboFacultades.addItem(this.Datos.lFacultades.get(i).getNombreFacu());
        }
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        TablaIngenieria = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        TablaHumanidades = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        TablaEmpresariales = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        TablaSalud = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        comboFacultades = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        comboCarreras = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaDetalles = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaMaterias = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtApellido = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TablaIngenieria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Carnet", "Nombre del Estudiante", "Carrera", "Cantidad/Materias", "Materias Inscritas"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(TablaIngenieria);
        if (TablaIngenieria.getColumnModel().getColumnCount() > 0) {
            TablaIngenieria.getColumnModel().getColumn(0).setResizable(false);
            TablaIngenieria.getColumnModel().getColumn(0).setPreferredWidth(100);
            TablaIngenieria.getColumnModel().getColumn(1).setResizable(false);
            TablaIngenieria.getColumnModel().getColumn(1).setPreferredWidth(200);
            TablaIngenieria.getColumnModel().getColumn(2).setResizable(false);
            TablaIngenieria.getColumnModel().getColumn(2).setPreferredWidth(400);
            TablaIngenieria.getColumnModel().getColumn(3).setResizable(false);
            TablaIngenieria.getColumnModel().getColumn(3).setPreferredWidth(200);
            TablaIngenieria.getColumnModel().getColumn(4).setResizable(false);
            TablaIngenieria.getColumnModel().getColumn(4).setPreferredWidth(400);
        }

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 981, Short.MAX_VALUE)
                .addGap(25, 25, 25))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(126, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Facultad de IngenierÃ­a y Arquitectura", jPanel5);

        TablaHumanidades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Carnet", "Nombre del Estudiante", "Carrera", "Cantidad/Materias", "Materias Inscritas"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(TablaHumanidades);
        if (TablaHumanidades.getColumnModel().getColumnCount() > 0) {
            TablaHumanidades.getColumnModel().getColumn(0).setResizable(false);
            TablaHumanidades.getColumnModel().getColumn(0).setPreferredWidth(100);
            TablaHumanidades.getColumnModel().getColumn(1).setResizable(false);
            TablaHumanidades.getColumnModel().getColumn(1).setPreferredWidth(200);
            TablaHumanidades.getColumnModel().getColumn(2).setResizable(false);
            TablaHumanidades.getColumnModel().getColumn(2).setPreferredWidth(200);
            TablaHumanidades.getColumnModel().getColumn(3).setResizable(false);
            TablaHumanidades.getColumnModel().getColumn(3).setPreferredWidth(200);
            TablaHumanidades.getColumnModel().getColumn(4).setResizable(false);
            TablaHumanidades.getColumnModel().getColumn(4).setPreferredWidth(400);
        }

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 981, Short.MAX_VALUE)
                .addGap(25, 25, 25))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(126, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Facultad de Ciencias y Humanidades", jPanel7);

        TablaEmpresariales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Carnet", "Nombre del Estudiante", "Carrera", "Cantidad/Materias", "Materias Inscritas"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(TablaEmpresariales);
        if (TablaEmpresariales.getColumnModel().getColumnCount() > 0) {
            TablaEmpresariales.getColumnModel().getColumn(0).setResizable(false);
            TablaEmpresariales.getColumnModel().getColumn(0).setPreferredWidth(100);
            TablaEmpresariales.getColumnModel().getColumn(1).setResizable(false);
            TablaEmpresariales.getColumnModel().getColumn(1).setPreferredWidth(200);
            TablaEmpresariales.getColumnModel().getColumn(2).setResizable(false);
            TablaEmpresariales.getColumnModel().getColumn(2).setPreferredWidth(200);
            TablaEmpresariales.getColumnModel().getColumn(3).setResizable(false);
            TablaEmpresariales.getColumnModel().getColumn(3).setPreferredWidth(200);
            TablaEmpresariales.getColumnModel().getColumn(4).setResizable(false);
            TablaEmpresariales.getColumnModel().getColumn(4).setPreferredWidth(400);
        }

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 981, Short.MAX_VALUE)
                .addGap(25, 25, 25))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(126, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Facultad de Ciencias Empresariales", jPanel8);

        TablaSalud.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Carnet", "Nombre del Estudiante", "Carrera", "Cantidad/Materias", "Materias Inscritas"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(TablaSalud);
        if (TablaSalud.getColumnModel().getColumnCount() > 0) {
            TablaSalud.getColumnModel().getColumn(0).setResizable(false);
            TablaSalud.getColumnModel().getColumn(0).setPreferredWidth(100);
            TablaSalud.getColumnModel().getColumn(1).setResizable(false);
            TablaSalud.getColumnModel().getColumn(1).setPreferredWidth(200);
            TablaSalud.getColumnModel().getColumn(2).setResizable(false);
            TablaSalud.getColumnModel().getColumn(2).setPreferredWidth(200);
            TablaSalud.getColumnModel().getColumn(3).setResizable(false);
            TablaSalud.getColumnModel().getColumn(3).setPreferredWidth(200);
            TablaSalud.getColumnModel().getColumn(4).setResizable(false);
            TablaSalud.getColumnModel().getColumn(4).setPreferredWidth(400);
        }

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 981, Short.MAX_VALUE)
                .addGap(25, 25, 25))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(126, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Facultad de Ciencias de la Salud ", jPanel6);

        jTabbedPane1.addTab("Admin", jTabbedPane2);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("FACULTADES");

        comboFacultades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboFacultadesActionPerformed(evt);
            }
        });

        jLabel2.setText("CARRERAS");

        comboCarreras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCarrerasActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("DETALLES/MATERIA"));

        tablaDetalles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Docente", "Horarios", "Aula"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaDetalles);
        if (tablaDetalles.getColumnModel().getColumnCount() > 0) {
            tablaDetalles.getColumnModel().getColumn(0).setResizable(false);
            tablaDetalles.getColumnModel().getColumn(0).setPreferredWidth(200);
            tablaDetalles.getColumnModel().getColumn(1).setResizable(false);
            tablaDetalles.getColumnModel().getColumn(1).setPreferredWidth(600);
            tablaDetalles.getColumnModel().getColumn(2).setResizable(false);
            tablaDetalles.getColumnModel().getColumn(2).setPreferredWidth(70);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("MATERIAS DISPONIBLES (seleccione materia)"));

        tablaMaterias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre/Materia", "Orden", "Inscribir"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaMaterias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMateriasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tablaMaterias);
        if (tablaMaterias.getColumnModel().getColumnCount() > 0) {
            tablaMaterias.getColumnModel().getColumn(0).setResizable(false);
            tablaMaterias.getColumnModel().getColumn(0).setPreferredWidth(250);
            tablaMaterias.getColumnModel().getColumn(1).setResizable(false);
            tablaMaterias.getColumnModel().getColumn(1).setPreferredWidth(400);
            tablaMaterias.getColumnModel().getColumn(2).setResizable(false);
            tablaMaterias.getColumnModel().getColumn(2).setPreferredWidth(70);
            tablaMaterias.getColumnModel().getColumn(3).setResizable(false);
            tablaMaterias.getColumnModel().getColumn(3).setPreferredWidth(70);
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("DATOS DEL ESTUDIANTE"));

        jLabel3.setText("Nombre:");

        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });

        jLabel5.setText("Apellido:");

        txtApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNombre))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jButton1.setText("INSCRIBIR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("GENERAR COMPROBANTE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboFacultades, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(comboCarreras, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(36, 36, 36)
                .addComponent(jButton2)
                .addGap(167, 167, 167))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboFacultades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboCarreras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(80, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("InscripciÃ³n", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    
    private int CantidadMaterias(){
        int Cantidad=0;
        for (int i = 0; i < this.tablaMaterias.getRowCount(); i++) {
            boolean check = Boolean.valueOf(this.tablaMaterias.getValueAt(i, 3).toString());
            if (check) {
                Cantidad++;
            }
        }
        return Cantidad;
    }
     private String Carnet(JTextField Nombre, JTextField Apellido, int Clave){
        char Primero = Nombre.getText().charAt(0);
        char Segundo = Apellido.getText().charAt(0);
        StringBuilder sb = new StringBuilder();
        sb.append(Primero);
        sb.append(Segundo);
        DateFormat Formato = new SimpleDateFormat("yyyy");
        Object Carnet;
        Carnet = sb+Formato.format(new Date())+Clave;
        return Carnet.toString();
    }
    private void comboCarrerasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCarrerasActionPerformed
       
     switch(this.comboFacultades.getSelectedIndex())
     {
         //========================================LLENADO DE TABLA DE MATERIAS PARA LAS CARRERAS DE LA PRIMER FACULTAD=======================================================
         case 0 :
             switch(this.comboCarreras.getSelectedIndex())
             {
                 case 0:
                     tabla1.setRowCount(0);
                     for (int i = 0; i < this.Datos.lFacultades.get(0).lCarreras.get(0).lMaterias.size(); i++) {
                         Object [] registro = {this.Datos.lFacultades.get(0).lCarreras.get(0).lMaterias.get(i).getId(),
                                               this.Datos.lFacultades.get(0).lCarreras.get(0).lMaterias.get(i).getNombre(), Integer.toString((i+1)), false
                        };
                        tabla1.addRow(registro);
                     }
                     break;
                     
                 case 1:
                     tabla1.setRowCount(0);
                     for (int i = 0; i < this.Datos.lFacultades.get(0).lCarreras.get(1).lMaterias.size(); i++) {
                         Object [] registro = {this.Datos.lFacultades.get(0).lCarreras.get(1).lMaterias.get(i).getId(),
                                               this.Datos.lFacultades.get(0).lCarreras.get(1).lMaterias.get(i).getNombre(), Integer.toString((i+1)), false
                        };
                        tabla1.addRow(registro);
                     }
                     break;
                     
                 case 2:
                     tabla1.setRowCount(0);
                     for (int i = 0; i < this.Datos.lFacultades.get(0).lCarreras.get(2).lMaterias.size(); i++) {
                         Object [] registro = {this.Datos.lFacultades.get(0).lCarreras.get(2).lMaterias.get(i).getId(),
                                               this.Datos.lFacultades.get(0).lCarreras.get(2).lMaterias.get(i).getNombre(), Integer.toString((i+1)), false
                        };
                        tabla1.addRow(registro);
                     }
                     break;
                     
                  case 3:
                     tabla1.setRowCount(0);
                     for (int i = 0; i < this.Datos.lFacultades.get(0).lCarreras.get(3).lMaterias.size(); i++) {
                         Object [] registro = {this.Datos.lFacultades.get(0).lCarreras.get(3).lMaterias.get(i).getId(),
                                               this.Datos.lFacultades.get(0).lCarreras.get(3).lMaterias.get(i).getNombre(), Integer.toString((i+1)), false
                        };
                        tabla1.addRow(registro);
                     }
                     break;
                     
                  case 4:
                     tabla1.setRowCount(0);
                     for (int i = 0; i < this.Datos.lFacultades.get(0).lCarreras.get(4).lMaterias.size(); i++) {
                         Object [] registro = {this.Datos.lFacultades.get(0).lCarreras.get(4).lMaterias.get(i).getId(),
                                               this.Datos.lFacultades.get(0).lCarreras.get(4).lMaterias.get(i).getNombre(), Integer.toString((i+1)), false
                        };
                        tabla1.addRow(registro);
                     }
                     break;
            }
             break;
         
        //========================================LLENADO DE TABLA DE MATERIAS PARA LAS CARRERAS DE LA SEGUNDA FACULTAD=======================================================
             
        case 1 :
             switch(this.comboCarreras.getSelectedIndex())
             {
                 case 0:
                     tabla1.setRowCount(0);
                     for (int i = 0; i < this.Datos.lFacultades.get(1).lCarreras.get(0).lMaterias.size(); i++) {
                         Object [] registro = {this.Datos.lFacultades.get(1).lCarreras.get(0).lMaterias.get(i).getId(),
                                               this.Datos.lFacultades.get(1).lCarreras.get(0).lMaterias.get(i).getNombre(), Integer.toString((i+1)), false
                        };
                        tabla1.addRow(registro);
                     }
                     break;
                     
                 case 1:
                     tabla1.setRowCount(0);
                     for (int i = 0; i < this.Datos.lFacultades.get(1).lCarreras.get(1).lMaterias.size(); i++) {
                         Object [] registro = {this.Datos.lFacultades.get(1).lCarreras.get(1).lMaterias.get(i).getId(),
                                               this.Datos.lFacultades.get(1).lCarreras.get(1).lMaterias.get(i).getNombre(), Integer.toString((i+1)), false
                        };
                        tabla1.addRow(registro);
                     }
                     break;
                     
                 case 2:
                     tabla1.setRowCount(0);
                     for (int i = 0; i < this.Datos.lFacultades.get(1).lCarreras.get(2).lMaterias.size(); i++) {
                         Object [] registro = {this.Datos.lFacultades.get(1).lCarreras.get(2).lMaterias.get(i).getId(),
                                               this.Datos.lFacultades.get(1).lCarreras.get(2).lMaterias.get(i).getNombre(), Integer.toString((i+1)), false
                        };
                        tabla1.addRow(registro);
                     }
                     break;
                     
                  case 3:
                     tabla1.setRowCount(0);
                     for (int i = 0; i < this.Datos.lFacultades.get(1).lCarreras.get(3).lMaterias.size(); i++) {
                         Object [] registro = {this.Datos.lFacultades.get(1).lCarreras.get(3).lMaterias.get(i).getId(),
                                               this.Datos.lFacultades.get(1).lCarreras.get(3).lMaterias.get(i).getNombre(), Integer.toString((i+1)), false
                        };
                        tabla1.addRow(registro);
                     }
                     break;            
             }
             break;
             
         //========================================LLENADO DE TABLA DE MATERIAS PARA LAS CARRERAS DE LA TERCER FACULTAD=======================================================
              case 2 :
             switch(this.comboCarreras.getSelectedIndex())
             {
                 case 0:
                     tabla1.setRowCount(0);
                     for (int i = 0; i < this.Datos.lFacultades.get(2).lCarreras.get(0).lMaterias.size(); i++) {
                         Object [] registro = {this.Datos.lFacultades.get(2).lCarreras.get(0).lMaterias.get(i).getId(),
                                               this.Datos.lFacultades.get(2).lCarreras.get(0).lMaterias.get(i).getNombre(), Integer.toString((i+1)), false
                        };
                        tabla1.addRow(registro);
                     }
                     break;
                     
                 case 1:
                     tabla1.setRowCount(0);
                     for (int i = 0; i < this.Datos.lFacultades.get(2).lCarreras.get(1).lMaterias.size(); i++) {
                         Object [] registro = {this.Datos.lFacultades.get(2).lCarreras.get(1).lMaterias.get(i).getId(),
                                               this.Datos.lFacultades.get(2).lCarreras.get(1).lMaterias.get(i).getNombre(), Integer.toString((i+1)), false
                        };
                        tabla1.addRow(registro);
                     }
                     break;
                     
                 case 2:
                     tabla1.setRowCount(0);
                     for (int i = 0; i < this.Datos.lFacultades.get(2).lCarreras.get(2).lMaterias.size(); i++) {
                         Object [] registro = {this.Datos.lFacultades.get(2).lCarreras.get(2).lMaterias.get(i).getId(),
                                               this.Datos.lFacultades.get(2).lCarreras.get(2).lMaterias.get(i).getNombre(), Integer.toString((i+1)), false
                        };
                        tabla1.addRow(registro);
                     }
                     break;
                     
                  case 3:
                     tabla1.setRowCount(0);
                     for (int i = 0; i < this.Datos.lFacultades.get(2).lCarreras.get(3).lMaterias.size(); i++) {
                         Object [] registro = {this.Datos.lFacultades.get(2).lCarreras.get(3).lMaterias.get(i).getId(),
                                               this.Datos.lFacultades.get(2).lCarreras.get(3).lMaterias.get(i).getNombre(), Integer.toString((i+1)), false
                        };
                        tabla1.addRow(registro);
                     }
                     break;            
                  case 4:
                     tabla1.setRowCount(0);
                     for (int i = 0; i < this.Datos.lFacultades.get(2).lCarreras.get(4).lMaterias.size(); i++) {
                         Object [] registro = {this.Datos.lFacultades.get(2).lCarreras.get(4).lMaterias.get(i).getId(),
                                               this.Datos.lFacultades.get(2).lCarreras.get(4).lMaterias.get(i).getNombre(), Integer.toString((i+1)), false
                        };
                        tabla1.addRow(registro);
                     }
                     break;         
             }
             break;
         
             //========================================LLENADO DE TABLA DE MATERIAS PARA LAS CARRERAS DE LA CUARTA FACULTAD=======================================================
              case 3 :
             switch(this.comboCarreras.getSelectedIndex())
             {
                 case 0:
                     tabla1.setRowCount(0);
                     for (int i = 0; i < this.Datos.lFacultades.get(3).lCarreras.get(0).lMaterias.size(); i++) {
                         Object [] registro = {this.Datos.lFacultades.get(3).lCarreras.get(0).lMaterias.get(i).getId(),
                                               this.Datos.lFacultades.get(3).lCarreras.get(0).lMaterias.get(i).getNombre(), Integer.toString((i+1)), false
                        };
                        tabla1.addRow(registro);
                     }
                     break;
                     
                 case 1:
                     tabla1.setRowCount(0);
                     for (int i = 0; i < this.Datos.lFacultades.get(3).lCarreras.get(1).lMaterias.size(); i++) {
                         Object [] registro = {this.Datos.lFacultades.get(3).lCarreras.get(1).lMaterias.get(i).getId(),
                                               this.Datos.lFacultades.get(3).lCarreras.get(1).lMaterias.get(i).getNombre(), Integer.toString((i+1)), false
                        };
                        tabla1.addRow(registro);
                     }
                     break;             
             }
             break;
         
     
     }
    }//GEN-LAST:event_comboCarrerasActionPerformed

    private void tablaMateriasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMateriasMouseClicked
        this.ModeloTablaDetalle.getDataVector().removeAllElements();
        int Facultad = this.comboFacultades.getSelectedIndex();
        int Carrera = this.comboCarreras.getSelectedIndex();
        int Indice = this.tablaMaterias.getSelectedRow();
       
        String [] Registro = {this.Datos.lFacultades.get(Facultad).lCarreras.get(Carrera).lMaterias.get(Indice).getDocente().getNombre() + "  " +
                                  this.Datos.lFacultades.get(Facultad).lCarreras.get(Carrera).lMaterias.get(Indice).getDocente().getApellido(),
                               //Horarios
                               this.Datos.lFacultades.get(Facultad).lCarreras.get(Carrera).lMaterias.get(Indice).getDia1()+ "  " +
                               this.Datos.lFacultades.get(Facultad).lCarreras.get(Carrera).lMaterias.get(Indice).getHorario1()+ "   "+
                               this.Datos.lFacultades.get(Facultad).lCarreras.get(Carrera).lMaterias.get(Indice).getDia2()+ "  "+
                               this.Datos.lFacultades.get(Facultad).lCarreras.get(Carrera).lMaterias.get(Indice).getHorario2(),
                               this.Datos.lFacultades.get(Facultad).lCarreras.get(Carrera).lMaterias.get(Indice).getSalon()};
        ModeloTablaDetalle.addRow(Registro);
            
    }//GEN-LAST:event_tablaMateriasMouseClicked

    private void comboFacultadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboFacultadesActionPerformed
        if (this.comboFacultades.getSelectedIndex() == 0) {
            this.comboCarreras.removeAllItems();
            for (int i = 0; i < this.Datos.lFacultades.get(0).lCarreras.size(); i++) {
                this.comboCarreras.addItem(this.Datos.lFacultades.get(0).lCarreras.get(i).getNombre());
            }
        }
        if (this.comboFacultades.getSelectedIndex() == 1) {
            this.comboCarreras.removeAllItems();
            for (int i = 0; i < this.Datos.lFacultades.get(1).lCarreras.size(); i++) {
                this.comboCarreras.addItem(this.Datos.lFacultades.get(1).lCarreras.get(i).getNombre());
            }
        }
        if (this.comboFacultades.getSelectedIndex() == 2) {
            this.comboCarreras.removeAllItems();
            for (int i = 0; i < this.Datos.lFacultades.get(2).lCarreras.size(); i++) {
                this.comboCarreras.addItem(this.Datos.lFacultades.get(2).lCarreras.get(i).getNombre());
            }
        }
        if (this.comboFacultades.getSelectedIndex() == 3) {
            this.comboCarreras.removeAllItems();
            for (int i = 0; i < this.Datos.lFacultades.get(3).lCarreras.size(); i++) {
                this.comboCarreras.addItem(this.Datos.lFacultades.get(3).lCarreras.get(i).getNombre());
            }
        }
        if (this.comboFacultades.getSelectedIndex() == 4) {
            this.comboCarreras.removeAllItems();
            for (int i = 0; i < this.Datos.lFacultades.get(4).lCarreras.size(); i++) {
                this.comboCarreras.addItem(this.Datos.lFacultades.get(4).lCarreras.get(i).getNombre());
            }
        }
    }//GEN-LAST:event_comboFacultadesActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        int Clave=0;
        JComboBox listamaterias = new JComboBox();
        //Facultad Ingenieria
        if (this.comboFacultades.getSelectedIndex() == 0) {
            for (int i = 0; i < this.tabla1.getRowCount(); i++) {
                Boolean check = Boolean.valueOf(this.tabla1.getValueAt(i, 3).toString());
                if (check) {
                    if (this.comboCarreras.getSelectedIndex() == 0) {
                        Clave=600;
                    }
                    if (this.comboCarreras.getSelectedIndex() == 1) {
                        Clave=601;
                    }
                    if (this.comboCarreras.getSelectedIndex() == 2) {
                        Clave=602;
                    }
                    if (this.comboCarreras.getSelectedIndex() == 3) {
                        Clave=603;
                    }
                    if (this.comboCarreras.getSelectedIndex() == 4) {
                        Clave=604;
                    }
                    listamaterias.addItem(this.tablaMaterias.getValueAt(i, 1));
                    this.TablaIngenieria.getColumnModel().getColumn(4).setCellEditor(new DefaultCellEditor(listamaterias));
                }
                
            }
            Object [] Registros = {this.Carnet(this.txtNombre, this.txtApellido, Clave),
                                           this.txtNombre.getText().toUpperCase() + "  " + this.txtApellido.getText().toUpperCase(), this.comboCarreras.getSelectedItem().toString(),
                                           Integer.toString(this.CantidadMaterias())};
            this.ModeloIngenieria.addRow(Registros);
        }
        //Facultad Ciencias y Humanidades
        if (this.comboFacultades.getSelectedIndex() == 1) {
            for (int i = 0; i < this.tabla1.getRowCount(); i++) {
                Boolean check = Boolean.valueOf(this.tabla1.getValueAt(i, 3).toString());
                if (check) {
                    if (this.comboCarreras.getSelectedIndex() == 0) {
                        Clave=605;
                    }
                    if (this.comboCarreras.getSelectedIndex() == 1) {
                        Clave=606;
                    }
                    if (this.comboCarreras.getSelectedIndex() == 2) {
                        Clave=607;
                    }
                    if (this.comboCarreras.getSelectedIndex() == 3) {
                        Clave=608;
                    }
                    
                    listamaterias.addItem(this.tablaMaterias.getValueAt(i, 1));
                    this.TablaHumanidades.getColumnModel().getColumn(4).setCellEditor(new DefaultCellEditor(listamaterias));
                }
                
            }
            Object [] Registros = {this.Carnet(this.txtNombre, this.txtApellido, Clave),
                                           this.txtNombre.getText().toUpperCase() + "  " + this.txtApellido.getText().toUpperCase(), this.comboCarreras.getSelectedItem().toString(),
                                           Integer.toString(this.CantidadMaterias())};
            this.ModeloHumanidades.addRow(Registros);
        }
        //Facultad Ciencias Empresariales
        if (this.comboFacultades.getSelectedIndex() == 2) {
            for (int i = 0; i < this.tabla1.getRowCount(); i++) {
                Boolean check = Boolean.valueOf(this.tabla1.getValueAt(i, 3).toString());
                if (check) {
                    if (this.comboCarreras.getSelectedIndex() == 0) {
                        Clave=610;
                    }
                    if (this.comboCarreras.getSelectedIndex() == 1) {
                        Clave=611;
                    }
                    if (this.comboCarreras.getSelectedIndex() == 2) {
                        Clave=612;
                    }
                    if (this.comboCarreras.getSelectedIndex() == 3) {
                        Clave=613;
                    }
                    if (this.comboCarreras.getSelectedIndex() == 4) {
                        Clave=614;
                    }
                    listamaterias.addItem(this.tablaMaterias.getValueAt(i, 1));
                    this.TablaEmpresariales.getColumnModel().getColumn(4).setCellEditor(new DefaultCellEditor(listamaterias));
                }
                
            }
            Object [] Registros = {this.Carnet(this.txtNombre, this.txtApellido, Clave),
                                           this.txtNombre.getText().toUpperCase() + "  " + this.txtApellido.getText().toUpperCase(), this.comboCarreras.getSelectedItem().toString(),
                                           Integer.toString(this.CantidadMaterias())};
            this.ModeloEmpresariales.addRow(Registros);
        }
        //Facultad Ciencias de la Salud
        if (this.comboFacultades.getSelectedIndex() == 3) {
            for (int i = 0; i < this.tabla1.getRowCount(); i++) {
                Boolean check = Boolean.valueOf(this.tabla1.getValueAt(i, 3).toString());
                if (check) {
                    if (this.comboCarreras.getSelectedIndex() == 0) {
                        Clave=615;
                    }
                    if (this.comboCarreras.getSelectedIndex() == 1) {
                        Clave=616;
                    }
                   
                    listamaterias.addItem(this.tablaMaterias.getValueAt(i, 1));
                    this.TablaSalud.getColumnModel().getColumn(4).setCellEditor(new DefaultCellEditor(listamaterias));
                }
                
            }
            Object [] Registros = {this.Carnet(this.txtNombre, this.txtApellido, Clave),
                                           this.txtNombre.getText().toUpperCase() + "  " + this.txtApellido.getText().toUpperCase(), this.comboCarreras.getSelectedItem().toString(),
                                           Integer.toString(this.CantidadMaterias())};
            this.ModeloSalud.addRow(Registros);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
        char validar = evt.getKeyChar();
        if (Character.isDigit(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar Caracteres VÃ¡lidos");
        }
    }//GEN-LAST:event_txtNombreKeyTyped

    private void txtApellidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoKeyTyped
        char validar = evt.getKeyChar();
        if (Character.isDigit(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar Caracteres VÃ¡lidos");
        }
    }//GEN-LAST:event_txtApellidoKeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       this.generarPdf();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmInscripcion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmInscripcion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmInscripcion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmInscripcion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmInscripcion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaEmpresariales;
    private javax.swing.JTable TablaHumanidades;
    private javax.swing.JTable TablaIngenieria;
    private javax.swing.JTable TablaSalud;
    private javax.swing.JComboBox<String> comboCarreras;
    private javax.swing.JComboBox<String> comboFacultades;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable tablaDetalles;
    private javax.swing.JTable tablaMaterias;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables

    @Override
    public void generarPdf() {
          JFileChooser dlg = new JFileChooser();
        int option = dlg.showSaveDialog(this);
        if (option == JFileChooser.APPROVE_OPTION) {
            File f = dlg.getSelectedFile();
            this.path = f.toString();
            
        }
        
        try {
            FileOutputStream archivo = new FileOutputStream(this.path+".pdf");
            Document doc = new Document();
            PdfWriter.getInstance(doc, archivo);
            doc.open();
             doc.add(new Paragraph("UNIVERSIDAD CATOLICA DE EL SALVADOR"));
              doc.add(new Paragraph("COMPROBANTE DE INSCRIPCION: "));
             doc.add(new Paragraph("â â â â â â â â â â â â â â â "));
            doc.add(new Paragraph("NOMBRE ALUMNO: " + this.txtNombre.getText()));
            doc.add(new Paragraph("â â â â â â â â â â â â â â â "));
            doc.add(new Paragraph("APELLIDO ALUMNO: " + this.txtApellido.getText()));
            doc.add(new Paragraph("â â â â â â â â â â â â â â â "));
            doc.add(new Paragraph("CARRERA: " + this.comboCarreras.getSelectedItem().toString()));
            doc.add(new Paragraph("â â â â â â â â â â â â â â â "));
            doc.add(new Paragraph("FACULTAD: " + this.comboFacultades.getSelectedItem().toString()));
            doc.add(new Paragraph("â â â â â â â â â â â â â â â "));
            doc.add(new Paragraph("â â â â â â â â â â â â â â â "));
            
             PdfPTable tabla = new PdfPTable(3);
             
             //agregando titulos de tabla
             
             tabla.addCell("NOMBRE MATERIA");
             tabla.addCell("DOCENTE");
             tabla.addCell("HORARIO");
             
             

            
            for (int i = 0; i < this.tablaMaterias.getRowCount(); i++) {
                Boolean check = Boolean.valueOf(this.tabla1.getValueAt(i, 3).toString());
                  if (check) {
                       tabla.addCell(this.tablaMaterias.getValueAt(i, 1).toString());
                        tabla.addCell(Datos.lFacultades.get(this.comboFacultades.getSelectedIndex()).lCarreras.get(this.comboCarreras.getSelectedIndex()).lMaterias.get(i).getDocente().getNombre());
                       tabla.addCell(Datos.lFacultades.get(this.comboFacultades.getSelectedIndex()).lCarreras.get(this.comboCarreras.getSelectedIndex()).lMaterias.get(i).getDia1()+ " " + 
                                 Datos.lFacultades.get(this.comboFacultades.getSelectedIndex()).lCarreras.get(this.comboCarreras.getSelectedIndex()).lMaterias.get(i).getHorario1()+ " "+
                                  Datos.lFacultades.get(this.comboFacultades.getSelectedIndex()).lCarreras.get(this.comboCarreras.getSelectedIndex()).lMaterias.get(i).getDia2()+ " " +
                                  Datos.lFacultades.get(this.comboFacultades.getSelectedIndex()).lCarreras.get(this.comboCarreras.getSelectedIndex()).lMaterias.get(i).getHorario2()+ " ");
                         
                      
                    
                      
                      
                           
                  
                   
                    }
           } 
            doc.add(tabla);
            doc.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.toString());
        }
        this.txtNombre.setText("");
        this.txtApellido.setText("");
    }
}
